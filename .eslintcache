[{"F:\\playdice\\other\\atari_second_2\\src\\index.js":"1","F:\\playdice\\other\\atari_second_2\\src\\reportWebVitals.js":"2","F:\\playdice\\other\\atari_second_2\\src\\App.js":"3","F:\\playdice\\other\\atari_second_2\\src\\store\\configureStore.js":"4","F:\\playdice\\other\\atari_second_2\\src\\reducers\\cardsReducer.js":"5","F:\\playdice\\other\\atari_second_2\\src\\route\\index.js":"6","F:\\playdice\\other\\atari_second_2\\src\\actions\\actionTypes.js":"7","F:\\playdice\\other\\atari_second_2\\src\\pages\\dashboard.js":"8","F:\\playdice\\other\\atari_second_2\\src\\components\\Footer.js":"9","F:\\playdice\\other\\atari_second_2\\src\\components\\Header.js":"10","F:\\playdice\\other\\atari_second_2\\src\\components\\Card.js":"11","F:\\playdice\\other\\atari_second_2\\src\\components\\LiveTable.js":"12","F:\\playdice\\other\\atari_second_2\\src\\pages\\classic_dice.js":"13","F:\\playdice\\other\\atari_second_2\\src\\pages\\dice_ll.js":"14","F:\\playdice\\other\\atari_second_2\\src\\pages\\farming.js":"15","F:\\playdice\\other\\atari_second_2\\src\\components\\farming_card1.js":"16","F:\\playdice\\other\\atari_second_2\\src\\components\\farming_card2.js":"17","F:\\playdice\\other\\atari_second_2\\src\\pages\\careful.js":"18","F:\\playdice\\other\\atari_second_2\\src\\components\\careful_card1.js":"19","F:\\playdice\\other\\atari_second_2\\src\\components\\careful_card2.js":"20","F:\\playdice\\other\\atari_second_2\\src\\components\\careful_card3.js":"21","F:\\playdice\\other\\atari_second_2\\src\\pages\\referral.js":"22","F:\\playdice\\other\\atari_second_2\\src\\pages\\dividend.js":"23","F:\\playdice\\other\\atari_second_2\\src\\components\\referal_card.js":"24","F:\\playdice\\other\\atari_second_2\\src\\components\\referral_table.js":"25","F:\\playdice\\other\\atari_second_2\\src\\actions\\actions.js":"26","F:\\playdice\\project\\client\\src\\index.js":"27","F:\\playdice\\project\\client\\src\\reportWebVitals.js":"28","F:\\playdice\\project\\client\\src\\App.js":"29","F:\\playdice\\project\\client\\src\\store\\configureStore.js":"30","F:\\playdice\\project\\client\\src\\reducers\\cardsReducer.js":"31","F:\\playdice\\project\\client\\src\\route\\index.js":"32","F:\\playdice\\project\\client\\src\\actions\\actionTypes.js":"33","F:\\playdice\\project\\client\\src\\pages\\classic_dice.js":"34","F:\\playdice\\project\\client\\src\\pages\\dashboard.js":"35","F:\\playdice\\project\\client\\src\\pages\\farming.js":"36","F:\\playdice\\project\\client\\src\\pages\\dice_ll.js":"37","F:\\playdice\\project\\client\\src\\pages\\dividend.js":"38","F:\\playdice\\project\\client\\src\\pages\\careful.js":"39","F:\\playdice\\project\\client\\src\\pages\\referral.js":"40","F:\\playdice\\project\\client\\src\\components\\Footer.js":"41","F:\\playdice\\project\\client\\src\\components\\farming_card1.js":"42","F:\\playdice\\project\\client\\src\\components\\Header.js":"43","F:\\playdice\\project\\client\\src\\components\\LiveTable.js":"44","F:\\playdice\\project\\client\\src\\components\\farming_card2.js":"45","F:\\playdice\\project\\client\\src\\components\\referral_table.js":"46","F:\\playdice\\project\\client\\src\\components\\referal_card.js":"47","F:\\playdice\\project\\client\\src\\components\\Card.js":"48","F:\\playdice\\project\\client\\src\\components\\careful_card2.js":"49","F:\\playdice\\project\\client\\src\\components\\careful_card1.js":"50","F:\\playdice\\project\\client\\src\\components\\careful_card3.js":"51","F:\\playdice\\project\\client\\src\\actions\\actions.js":"52","F:\\playdice\\project\\client\\src\\pages\\referral_dice.js":"53","F:\\playdice\\project\\client\\src\\components\\connectModal.js":"54"},{"size":600,"mtime":1613745985391,"results":"55","hashOfConfig":"56"},{"size":375,"mtime":1613725938418,"results":"57","hashOfConfig":"56"},{"size":222,"mtime":1616694214514,"results":"58","hashOfConfig":"56"},{"size":243,"mtime":1613724062772,"results":"59","hashOfConfig":"56"},{"size":1381,"mtime":1617412891589,"results":"60","hashOfConfig":"56"},{"size":915,"mtime":1616634122155,"results":"61","hashOfConfig":"56"},{"size":176,"mtime":1617412436647,"results":"62","hashOfConfig":"56"},{"size":6136,"mtime":1617415927794,"results":"63","hashOfConfig":"56"},{"size":1946,"mtime":1616636098069,"results":"64","hashOfConfig":"56"},{"size":3545,"mtime":1617413236119,"results":"65","hashOfConfig":"56"},{"size":1107,"mtime":1616693469425,"results":"66","hashOfConfig":"56"},{"size":2497,"mtime":1617410626310,"results":"67","hashOfConfig":"56"},{"size":12077,"mtime":1617416154295,"results":"68","hashOfConfig":"56"},{"size":13196,"mtime":1617415207309,"results":"69","hashOfConfig":"56"},{"size":11638,"mtime":1616693495008,"results":"70","hashOfConfig":"56"},{"size":2146,"mtime":1616453727090,"results":"71","hashOfConfig":"56"},{"size":2238,"mtime":1616468129190,"results":"72","hashOfConfig":"56"},{"size":12904,"mtime":1616693477651,"results":"73","hashOfConfig":"56"},{"size":327,"mtime":1616503178448,"results":"74","hashOfConfig":"56"},{"size":388,"mtime":1616503172625,"results":"75","hashOfConfig":"56"},{"size":1094,"mtime":1616508006985,"results":"76","hashOfConfig":"56"},{"size":6905,"mtime":1616693499831,"results":"77","hashOfConfig":"56"},{"size":0,"mtime":1616504630154,"results":"78","hashOfConfig":"56"},{"size":1271,"mtime":1616525322711,"results":"79","hashOfConfig":"56"},{"size":2263,"mtime":1616511934710,"results":"80","hashOfConfig":"56"},{"size":377,"mtime":1617412462876,"results":"81","hashOfConfig":"56"},{"size":600,"mtime":1613745985391,"results":"82","hashOfConfig":"83"},{"size":375,"mtime":1613725938418,"results":"84","hashOfConfig":"83"},{"size":2208,"mtime":1623375496599,"results":"85","hashOfConfig":"83"},{"size":243,"mtime":1613724062772,"results":"86","hashOfConfig":"83"},{"size":1381,"mtime":1617412891589,"results":"87","hashOfConfig":"83"},{"size":1141,"mtime":1623378194039,"results":"88","hashOfConfig":"83"},{"size":176,"mtime":1617412436647,"results":"89","hashOfConfig":"83"},{"size":18901,"mtime":1623389256847,"results":"90","hashOfConfig":"83"},{"size":7608,"mtime":1623388685238,"results":"91","hashOfConfig":"83"},{"size":11618,"mtime":1618627187042,"results":"92","hashOfConfig":"83"},{"size":19019,"mtime":1623389286102,"results":"93","hashOfConfig":"83"},{"size":0,"mtime":1616504630154,"results":"94","hashOfConfig":"83"},{"size":12884,"mtime":1618627167235,"results":"95","hashOfConfig":"83"},{"size":11195,"mtime":1620064423147,"results":"96","hashOfConfig":"83"},{"size":1996,"mtime":1620065789967,"results":"97","hashOfConfig":"83"},{"size":2146,"mtime":1616453727090,"results":"98","hashOfConfig":"83"},{"size":2614,"mtime":1623383071862,"results":"99","hashOfConfig":"83"},{"size":2512,"mtime":1623384357166,"results":"100","hashOfConfig":"83"},{"size":2238,"mtime":1616468129190,"results":"101","hashOfConfig":"83"},{"size":2696,"mtime":1623281532483,"results":"102","hashOfConfig":"83"},{"size":1271,"mtime":1616525322711,"results":"103","hashOfConfig":"83"},{"size":1107,"mtime":1616693469425,"results":"104","hashOfConfig":"83"},{"size":388,"mtime":1616503172625,"results":"105","hashOfConfig":"83"},{"size":327,"mtime":1616503178448,"results":"106","hashOfConfig":"83"},{"size":1094,"mtime":1616508006985,"results":"107","hashOfConfig":"83"},{"size":377,"mtime":1617412462876,"results":"108","hashOfConfig":"83"},{"size":19585,"mtime":1623398433766,"results":"109","hashOfConfig":"83"},{"size":1794,"mtime":1623280994656,"results":"110","hashOfConfig":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"18keh9m",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"113"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"113"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"113"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"113"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"16ngxz0",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"170"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"170"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"170"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"170"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"170"},"F:\\playdice\\other\\atari_second_2\\src\\index.js",[],["232","233"],"F:\\playdice\\other\\atari_second_2\\src\\reportWebVitals.js",[],"F:\\playdice\\other\\atari_second_2\\src\\App.js",[],"F:\\playdice\\other\\atari_second_2\\src\\store\\configureStore.js",[],"F:\\playdice\\other\\atari_second_2\\src\\reducers\\cardsReducer.js",[],"F:\\playdice\\other\\atari_second_2\\src\\route\\index.js",["234"],"import React from 'react';\r\nimport { BrowserRouter ,HashRouter, Route } from 'react-router-dom'\r\nimport Dashboard from '../pages/dashboard';\r\nimport ClassicDice from '../pages/classic_dice';\r\nimport DiceLL from '../pages/dice_ll';\r\nimport Farming from '../pages/farming';\r\nimport Careful from '../pages/careful';\r\nimport Referral from '../pages/referral';\r\nimport Dividend from '../pages/dividend';\r\n\r\n\r\nconst routes = () => (\r\n  <HashRouter>\r\n    <Route exact path=\"/\" component={(Dashboard)} />\r\n    <Route exact path=\"/classic-dice\" component={(ClassicDice)} />\r\n    <Route exact path=\"/dice-ii\" component={(DiceLL)} />\r\n    <Route exact path=\"/dice-ii-2\" component={(Farming)} />\r\n    <Route exact path=\"/be-careful\" component={(Careful)} />\r\n    <Route exact path=\"/referral\" component={(Referral)} />\r\n    <Route exact path=\"/dividend\" component={(Dividend)} />\r\n  </HashRouter>\r\n)\r\n\r\nexport default routes;\r\n","F:\\playdice\\other\\atari_second_2\\src\\actions\\actionTypes.js",[],"F:\\playdice\\other\\atari_second_2\\src\\pages\\dashboard.js",["235"],"F:\\playdice\\other\\atari_second_2\\src\\components\\Footer.js",[],"F:\\playdice\\other\\atari_second_2\\src\\components\\Header.js",["236","237","238"],"F:\\playdice\\other\\atari_second_2\\src\\components\\Card.js",[],"F:\\playdice\\other\\atari_second_2\\src\\components\\LiveTable.js",[],"F:\\playdice\\other\\atari_second_2\\src\\pages\\classic_dice.js",["239","240","241","242","243","244","245","246","247"],"F:\\playdice\\other\\atari_second_2\\src\\pages\\dice_ll.js",["248","249","250","251","252","253","254","255","256","257","258","259"],"F:\\playdice\\other\\atari_second_2\\src\\pages\\farming.js",["260","261","262","263","264","265","266"],"import React from 'react';\r\n// import '../App.css';\r\nimport { Grid, Hidden } from '@material-ui/core';\r\nimport LiveTable from '../components/LiveTable';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport backgroundImg from '../assets/img/background.png';\r\nimport dice1 from '../assets/img/dice1.png';\r\nimport dice2 from '../assets/img/dice2.png';\r\nimport dice3 from '../assets/img/dice3.png';\r\nimport dice4 from '../assets/img/dice4.png';\r\nimport effect from '../assets/img/effect.png';\r\nimport dicePurple from '../assets/img/dice_purple.png'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FarmingCard from '../components/farming_card1';\r\nimport FarmingCard2 from '../components/farming_card2';\r\nimport lampImage from '../assets/img/lamp.png'\r\n\r\nconst ColoredLine = ({ color }) => (\r\n    <hr\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 0.1\r\n        }}\r\n    />\r\n);\r\n\r\nvar rootStyle = {\r\n    width: \"100%\",\r\n    backgroundImage: `url(${backgroundImg})`,\r\n    height: \"100%\",\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center'\r\n};\r\n\r\nconst HigherSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 20,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#ee2748\",\r\n      height: 20,\r\n      borderRadius: 10,\r\n    },\r\n    rail: {\r\n        color: '#7fc03e',\r\n      height: 20,\r\n      borderRadius: 10,\r\n      opacity: 1\r\n    },\r\n  })(Slider);\r\n\r\n  const PayoutSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 10,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#c30a96\",\r\n      height: 10,\r\n    },\r\n    rail: {\r\n        backgroundImage: \"linear-gradient( to right,#316fdc 0%,#3c1c65 100% )\",\r\n      height: 5,\r\n      opacity: 1,\r\n      marginTop: 2.5\r\n    },\r\n  })(Slider);\r\n\r\n\r\nclass ClassicDice extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            higherVal: 50,\r\n            payoutVal: 1.985\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style1 = {backgroundImage: \"linear-gradient( to right,#14aafc 0%,#4f52ee 100% )\" }\r\n        const style2 = {backgroundImage: \"linear-gradient( to right,#d30c90 0%,#7d02c6 100% )\" }\r\n        const style3 = {backgroundImage: \"linear-gradient( to right,#f2882b 0%,#fb6a49 100% )\" }\r\n        const style4 = {backgroundImage: \"linear-gradient( to right,#33bae4 0%,#d929fb 100% )\" }\r\n        const cardTitle = \"Seriously Risky Farmer\";\r\n        return (\r\n            <div className=\"dashboard\" style={rootStyle}>\r\n                <Header></Header>\r\n                <Hidden smDown>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={8} md={12} >\r\n                        <div className=\"diceTitle\" style={style4}>\r\n                            {cardTitle}\r\n                            <img src={dicePurple} />\r\n                        </div>\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                </Hidden>\r\n                \r\n                <Grid container spacing={3} justify=\"center\" className = \"diceGrid\">\r\n                    <Grid container>\r\n                        <Grid item md={6} sm={12} xs={12}>\r\n                            <FarmingCard />\r\n                            <br />\r\n                        </Grid>\r\n                        <Grid item md={6} xs={12} sm={12}>\r\n                            <FarmingCard2 />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <Grid container spacing={3} className=\"autoGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <button type=\"button\" className=\"playBtn x-buypower-button\">Buy Power</button>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <button type=\"button\" className=\"playBtn autoBtn\" style={style2}>Get Power by Risk + TT</button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog1\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12}>\r\n                        <div>\r\n                            <div className = \"text-left\">\r\n                                Geeky Stats\r\n                            </div>\r\n                            <ColoredLine color = \"#692497\" />\r\n                            <div className = \"row\">\r\n                                <div className = \"col-md-4 col-sm-4 col-xs-6 x-font-normal-white winorlose\">APY</div>\r\n                                <div className = \"col-md-8 col-sm-8 col-xs-6 x-risk-balance x-font-normal-white\">191.76<span>%</span></div>\r\n                            </div>\r\n                            <ColoredLine color = \"#692497\" />\r\n                            <div className = \"row\">\r\n                                <div className = \"col-md-4 col-sm-4 col-xs-6 x-font-small-white2 winorlose\">Total value Locked</div>\r\n                                <div className = \"col-md-8 col-sm-8 col-xs-6 x-risk-balance x-font-small-white2\">2,519,658.39597 <span>TT</span></div>\r\n                            </div>\r\n                            <div className = \"row\">\r\n                                <div className = \"col-md-4 col-sm-4 col-xs-6 x-font-small-white2 winorlose\">Emit per Block</div>\r\n                                <div className = \"col-md-8 col-sm-8 col-xs-6 x-risk-balance x-font-small-white2\">0.01 <span>RISK</span></div>\r\n                            </div>\r\n                            <div className = \"row\">\r\n                                <div className = \"col-md-4 col-sm-4 col-xs-6 x-font-small-white2 winorlose\">Network Staked</div>\r\n                                <div className = \"col-md-8 col-sm-8 col-xs-6 x-risk-balance x-font-small-white2\">155,779.663372 <span>POWER</span></div>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12}>\r\n                    <div className = \"x-lamp\"><img src = {lampImage} alt = \"lamp\" /></div>\r\n                    <div className = \"x-lamp x-font-normal-white\" style = {{lineHeight: \"50%\"}}>How to Play</div>                  \r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog1\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Footer></Footer>\r\n                <img src={dice1} alt=\"dice1\" className=\"homeDice1\"/>\r\n                <img src={dice2} alt=\"dice2\" className=\"homeDice2\"/>\r\n                <img src={dice3} alt=\"dice3\" className=\"homeDice3\"/>\r\n                <img src={dice4} alt=\"dice4\" className=\"homeDice4\"/>\r\n                <img src={effect} alt=\"effect\" className=\"homeEffect\"/>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n  \r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         items: state,\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//     setItems,\r\n//     updateTimer\r\n// }\r\n  \r\nexport default ClassicDice;\r\n","F:\\playdice\\other\\atari_second_2\\src\\components\\farming_card1.js",[],"F:\\playdice\\other\\atari_second_2\\src\\components\\farming_card2.js",[],"F:\\playdice\\other\\atari_second_2\\src\\pages\\careful.js",["267","268","269","270","271","272","273","274","275"],"import React from 'react';\r\n// import '../App.css';\r\nimport { Grid, Hidden } from '@material-ui/core';\r\nimport LiveTable from '../components/LiveTable';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport backgroundImg from '../assets/img/background.png';\r\nimport dice1 from '../assets/img/dice1.png';\r\nimport dice2 from '../assets/img/dice2.png';\r\nimport dice3 from '../assets/img/dice3.png';\r\nimport dice4 from '../assets/img/dice4.png';\r\nimport effect from '../assets/img/effect.png';\r\nimport diceYellow from '../assets/img/dice_yellow.png'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CarefulCard1 from '../components/careful_card1';\r\nimport CarefulCard2 from '../components/careful_card2';\r\nimport CarefulCard3 from '../components/careful_card3';\r\n\r\nconst ColoredLine = ({ color }) => (\r\n    <hr\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 0.1\r\n        }}\r\n    />\r\n);\r\n\r\nvar rootStyle = {\r\n    width: \"100%\",\r\n    backgroundImage: `url(${backgroundImg})`,\r\n    height: \"100%\",\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center'\r\n};\r\n\r\nconst HigherSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 20,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#ee2748\",\r\n      height: 20,\r\n      borderRadius: 10,\r\n    },\r\n    rail: {\r\n        color: '#7fc03e',\r\n      height: 20,\r\n      borderRadius: 10,\r\n      opacity: 1\r\n    },\r\n  })(Slider);\r\n\r\n  const PayoutSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 10,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#c30a96\",\r\n      height: 10,\r\n    },\r\n    rail: {\r\n        backgroundImage: \"linear-gradient( to right,#316fdc 0%,#3c1c65 100% )\",\r\n      height: 5,\r\n      opacity: 1,\r\n      marginTop: 2.5\r\n    },\r\n  })(Slider);\r\n\r\n\r\nclass ClassicDice extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            higherVal: 50,\r\n            payoutVal: 1.985\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style1 = {backgroundImage: \"linear-gradient( to right,#14aafc 0%,#4f52ee 100% )\" }\r\n        const style2 = {backgroundImage: \"linear-gradient( to right,#d30c90 0%,#7d02c6 100% )\" }\r\n        const style3 = {backgroundImage: \"linear-gradient( to right,#f2882b 0%,#fb6a49 100% )\" }\r\n        const style4 = {backgroundImage: \"linear-gradient( to right,#33bae4 0%,#d929fb 100% )\" }\r\n        const cardTitle = \"Be Careful Game!!\";\r\n        return (\r\n            <div className=\"dashboard\" style={rootStyle}>\r\n                <Header></Header>\r\n                <Hidden smDown>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={8} md={12} >\r\n                        <div className=\"diceTitle\" style={style3}>\r\n                            {cardTitle}\r\n                            <img src={diceYellow} />\r\n                        </div>\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                </Hidden>\r\n\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog1\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Please note that this is a ZERO-SUM game with a slight modification! please understand the RISK of a zero sum game, the last person to join the game will not receive UPLINE benefit!\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Do NOT play UNLESS you are ready to lose the amount of token you put into the game\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Do NOT play UNLESS you have read this article\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            This is a public smart contract The tokens are managed by the contract\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog1\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp x-font-normal-orange2\">\r\n                            When someone join the game\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            8 UPLINE will receive 60% of the token\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            24 TRUE RANDOM player will receive 30% of the token\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            10% of the token will be used as an insurance fund which will be put at defi project(s) to generate yields This will give a minimum of 2% APY on the insurance fund\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Will receive CARE token, FREEZE this token to receive RANDOM drops of yields generated from the insurance fund\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <div className = \" diceGrid text-left x-font-big-white\">\r\n                    network State\r\n                </div>\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog2\" justify=\"center\">\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard1 \r\n                            title = \"Totla Spent\"\r\n                            value = \"356,780 TT\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard1 \r\n                            title = \"Insurance Processed\"\r\n                            value = \"32,461 TT\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard1 \r\n                            title = \"Insurance Claimed\"\r\n                            value = \"12,476100207 TT\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard1 \r\n                            title = \"Player Count\"\r\n                            value = \"1,325\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <div className = \" diceGrid text-left x-font-big-white\">\r\n                    Your State\r\n                </div>\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog2\" justify=\"center\">\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard2 \r\n                            title = \"Totla Spent\"\r\n                            value = \"356,780 TT\"\r\n                            backgroundColor = \"#ff0039\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard2 \r\n                            title = \"Insurance Processed\"\r\n                            value = \"32,461 TT\"\r\n                            backgroundColor = \"#2780e3\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard2\r\n                            title = \"Insurance Claimed\"\r\n                            value = \"12,476100207 TT\"\r\n                            backgroundColor = \"#ff7518\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard2\r\n                            title = \"Player Count\"\r\n                            value = \"1,325\"\r\n                            backgroundColor = \"#3fb618\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} className = \"diceGrid\" justify = \"center\">\r\n                    <Grid item xs = {12} sm={12} md={12} className = \"x-font-big-white\">\r\n                        Ready to play??\r\n                    </Grid>\r\n                    <Grid item xs = {12} sm={12} md={12} className = \"x-font-normal-red\">\r\n                        Are you ready if you lose??\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <CarefulCard3 />\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <CarefulCard3 />\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <CarefulCard3 />\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <CarefulCard3 />\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <CarefulCard3 />\r\n                </Grid>\r\n                <Footer></Footer>\r\n                <img src={dice1} alt=\"dice1\" className=\"homeDice1\"/>\r\n                <img src={dice2} alt=\"dice2\" className=\"homeDice2\"/>\r\n                <img src={dice3} alt=\"dice3\" className=\"homeDice3\"/>\r\n                <img src={dice4} alt=\"dice4\" className=\"homeDice4\"/>\r\n                <img src={effect} alt=\"effect\" className=\"homeEffect\"/>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n  \r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         items: state,\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//     setItems,\r\n//     updateTimer\r\n// }\r\n  \r\nexport default ClassicDice;\r\n","F:\\playdice\\other\\atari_second_2\\src\\components\\careful_card1.js",[],"F:\\playdice\\other\\atari_second_2\\src\\components\\careful_card2.js",[],"F:\\playdice\\other\\atari_second_2\\src\\components\\careful_card3.js",[],"F:\\playdice\\other\\atari_second_2\\src\\pages\\referral.js",["276","277","278","279","280"],"import React from 'react';\r\n// import '../App.css';\r\nimport { Grid, Hidden } from '@material-ui/core';\r\nimport LiveTable from '../components/LiveTable';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport backgroundImg from '../assets/img/background.png';\r\nimport dice1 from '../assets/img/dice1.png';\r\nimport dice2 from '../assets/img/dice2.png';\r\nimport dice3 from '../assets/img/dice3.png';\r\nimport dice4 from '../assets/img/dice4.png';\r\nimport effect from '../assets/img/effect.png';\r\nimport dicePink from '../assets/img/dice_pink.png'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport referalHuman from '../assets/img/referral_human.png';\r\nimport ReferralCard from '../components/referal_card';\r\nimport lampImage from '../assets/img/lamp.png';\r\nimport ReferralTable from '../components/referral_table';\r\n\r\nconst ColoredLine = ({ color }) => (\r\n    <hr\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 0.1\r\n        }}\r\n    />\r\n);\r\n\r\nvar rootStyle = {\r\n    width: \"100%\",\r\n    backgroundImage: `url(${backgroundImg})`,\r\n    height: \"100%\",\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center'\r\n};\r\n\r\nconst HigherSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 20,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#ee2748\",\r\n      height: 20,\r\n      borderRadius: 10,\r\n    },\r\n    rail: {\r\n        color: '#7fc03e',\r\n      height: 20,\r\n      borderRadius: 10,\r\n      opacity: 1\r\n    },\r\n  })(Slider);\r\n\r\n  const PayoutSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 10,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#c30a96\",\r\n      height: 10,\r\n    },\r\n    rail: {\r\n        backgroundImage: \"linear-gradient( to right,#316fdc 0%,#3c1c65 100% )\",\r\n      height: 5,\r\n      opacity: 1,\r\n      marginTop: 2.5\r\n    },\r\n  })(Slider);\r\n\r\n\r\nclass ClassicDice extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            higherVal: 50,\r\n            payoutVal: 1.985\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style3 = {backgroundImage: \"linear-gradient( to right,#f67d78 0%,#bf3d63 100% )\" }\r\n        const style2 = {backgroundImage: \"linear-gradient( to right,#d30c90 0%,#7d02c6 100% )\" }\r\n        const cardTitle = \"Be Careful Game!!\";\r\n        return (\r\n            <div className=\"dashboard\" style={rootStyle}>\r\n                <Header></Header>\r\n                <Hidden smDown>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={8} md={12} >\r\n                        <div className=\"diceTitle\" style={style3}>\r\n                            {cardTitle}\r\n                        </div>\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                </Hidden>\r\n                <div>\r\n                    <img src = {referalHuman} alt = \"referral_human\" />\r\n                </div>\r\n                <Grid container spacing = {3} className = \"diceGrid\" justify='center'>\r\n                    <Grid item xs={12} sm = {6} md = {6}>\r\n                        <ReferralCard\r\n                            title = \"Earn\" \r\n                            betTitle = \"From Ref's Bets\"\r\n                            betValue = \"0.1%\"\r\n                            miningTitle = \"From Ref's mining\"\r\n                            miningValue = \"5%\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm = {6} md = {6}>\r\n                        <ReferralCard \r\n                            title = \"My Referrals\" \r\n                            betTitle = \"Count\"\r\n                            betValue = \"0\"\r\n                            miningTitle = \"Profit From Ref Bets\"\r\n                            miningValue = \"0.00000 TT\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <div className = \"x-nopadding-diceGrid text-right\">\r\n                    <button className = \"x-referral-withdraw-button\" style = {style2}>Withdraw</button>\r\n                </div>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12}>\r\n                    <div className = \"x-lamp\"><img src = {lampImage} alt = \"lamp\" /></div>\r\n                    <div className = \"x-lamp x-font-normal-white\" style = {{lineHeight: \"50%\"}}>How to Play</div>                  \r\n                    </Grid>\r\n                </Grid>\r\n                <div container spacing={3} className=\"diceGrid x-farming-blog1\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePink} alt = \"dicepink\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Share your referral links\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePink} alt = \"dicepink\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Recieve a lifetime reward of 0.1% TT from each bet made by your ref and 4% from each mining token (SET) made by your ref!\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n\r\n                <Grid container spacing = {3} className = 'diceGrid' justify = \"center\">\r\n                    <Grid item xs = {12} sm = {12} md = {12}>\r\n                        <ReferralTable />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Footer></Footer>\r\n                <img src={dice1} alt=\"dice1\" className=\"homeDice1\"/>\r\n                <img src={dice2} alt=\"dice2\" className=\"homeDice2\"/>\r\n                <img src={dice3} alt=\"dice3\" className=\"homeDice3\"/>\r\n                <img src={dice4} alt=\"dice4\" className=\"homeDice4\"/>\r\n                <img src={effect} alt=\"effect\" className=\"homeEffect\"/>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n  \r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         items: state,\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//     setItems,\r\n//     updateTimer\r\n// }\r\n  \r\nexport default ClassicDice;\r\n","F:\\playdice\\other\\atari_second_2\\src\\pages\\dividend.js",[],"F:\\playdice\\other\\atari_second_2\\src\\components\\referal_card.js",[],"F:\\playdice\\other\\atari_second_2\\src\\components\\referral_table.js",[],"F:\\playdice\\other\\atari_second_2\\src\\actions\\actions.js",[],"F:\\playdice\\project\\client\\src\\index.js",[],["281","282"],"F:\\playdice\\project\\client\\src\\reportWebVitals.js",[],"F:\\playdice\\project\\client\\src\\App.js",["283","284","285","286"],"F:\\playdice\\project\\client\\src\\store\\configureStore.js",[],"F:\\playdice\\project\\client\\src\\reducers\\cardsReducer.js",[],"F:\\playdice\\project\\client\\src\\route\\index.js",["287","288"],"F:\\playdice\\project\\client\\src\\actions\\actionTypes.js",[],"F:\\playdice\\project\\client\\src\\pages\\classic_dice.js",["289","290","291","292","293","294","295","296","297","298"],"import React, { useState,useEffect, createRef } from 'react';\r\n// import '../App.css';\r\nimport { Grid } from '@material-ui/core';\r\nimport LiveTable from '../components/LiveTable';\r\nimport { Header, socket } from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport backgroundImg from '../assets/img/background.png';\r\nimport dice1 from '../assets/img/dice1.png';\r\nimport dice2 from '../assets/img/dice2.png';\r\nimport dice3 from '../assets/img/dice3.png';\r\nimport dice4 from '../assets/img/dice4.png';\r\nimport effect from '../assets/img/effect.png';\r\nimport diceBlue from '../assets/img/dice_blue.png'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Abi from '../assets/abi/abi.json';\r\nimport { ethers } from 'ethers';\r\nimport { useWallet } from 'use-wallet'\r\n\r\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nconst style1 = { backgroundImage: \"linear-gradient( to right,#14aafc 0%,#4f52ee 100% )\" }\r\nconst style2 = { backgroundImage: \"linear-gradient( to right,#d30c90 0%,#7d02c6 100% )\" }\r\nconst style3 = { backgroundImage: \"linear-gradient( to right,#f2882b 0%,#fb6a49 100% )\" }\r\nconst style4 = { backgroundImage: \"linear-gradient( to right,#33bae4 0%,#d929fb 100% )\" }\r\nconst cardTitle = \"Dice I\";\r\n\r\nvar rootStyle = {\r\n    width: \"100%\",\r\n    backgroundImage: `url(${backgroundImg})`,\r\n    height: \"100%\",\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center'\r\n};\r\n\r\nconst HigherSlide = withStyles({\r\n    root: {\r\n        color: '#7fc03e',\r\n        height: 20,\r\n    },\r\n    thumb: {\r\n        display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#ee2748\",\r\n        height: 20,\r\n        borderRadius: 10,\r\n    },\r\n    rail: {\r\n        color: '#7fc03e',\r\n        height: 20,\r\n        borderRadius: 10,\r\n        opacity: 1\r\n    },\r\n})(Slider);\r\n\r\nconst PayoutSlide = withStyles({\r\n    root: {\r\n        color: '#7fc03e',\r\n        height: 10,\r\n    },\r\n    thumb: {\r\n        display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#c30a96\",\r\n        height: 10,\r\n    },\r\n    rail: {\r\n        backgroundImage: \"linear-gradient( to right,#316fdc 0%,#3c1c65 100% )\",\r\n        height: 5,\r\n        opacity: 1,\r\n        marginTop: 2.5\r\n    },\r\n})(Slider);\r\n\r\nfunction timeout(delay: number) {\r\n    return new Promise(res => setTimeout(res, delay));\r\n}\r\n\r\nfunction createData(player, bet, profit, payout, guess, roll) {\r\n    return {player, bet, profit, payout, guess, roll };\r\n}\r\n\r\nconst rows = [\r\n    // createData(1, 'Yark G', 50, \"+79.13%\", 37.41, \"eg.text\", \"eg.text\"),\r\n    // createData(2, 'Action', 52, \"+79.13%\", 37.41, \"eg.text\", \"eg.text\")\r\n];\r\n\r\nconst myRows = [\r\n    // createData(1, 'Yark G', 50, \"+79.13%\", 37.41, \"eg.text\", \"eg.text\"),\r\n    // createData(2, 'Action', 52, \"+79.13%\", 37.41, \"eg.text\", \"eg.text\")\r\n];\r\n\r\nvar tokenAddress = \"0xf76e1b7ff23b462bf9f0562dcf7929c032c84ffb\";\r\nconst testnet = `https://bsc-dataseed.binance.org/`;\r\nconst provider = new ethers.providers.JsonRpcProvider(testnet);\r\nvar myContract = new ethers.Contract(tokenAddress, Abi, provider);\r\nvar i;\r\n\r\nfunction ClassicDice(){\r\n    const wallet = useWallet();\r\n    const publicKey = createRef();\r\n    const [signer, setSigner] = useState();\r\n    const [flag, setFlag] = useState(true);\r\n    const [amount, setAmount] = useState(1);\r\n    const [higherVal, setHigherVal] = useState(5000);\r\n    const [payoutVal, setPayoutVal] = useState(9910 / 5000);\r\n    const [profit, setProfit] = useState(9910 / 5000);\r\n    const [result, setResult] = useState(0);\r\n    const [totalData, setTotalData] = useState([]);\r\n    const [stateData, setStateData] = useState([]);\r\n    const [stopOnLoss, setStopOnLoss] = useState(10);\r\n    const [stopOnProfit, setStopOnProfit] = useState(10);\r\n    const [autoFlag, setAutoFlag] = useState(false);\r\n    const [totalProfit, setTotalProfit] = useState(0);\r\n    const [stateMyData, setStateMyData] = useState([]);\r\n    const [tableViewFlag, setTableViewFlag] = useState(false);\r\n\r\n    useEffect(()=> {\r\n        console.log(totalData);\r\n        if (wallet.status === \"connected\") {\r\n            const provider = new ethers.providers.Web3Provider(wallet.ethereum)\r\n            const signer = provider.getSigner();\r\n            setSigner(signer);\r\n            console.log(totalData.length)\r\n            if(Object.keys(totalData).length!==0){\r\n                console.log(wallet.account.toUpperCase())\r\n                rows.push(createData(totalData.publicKey, totalData.amount, totalData.profit, totalData.payoutVal, totalData.higherVal, totalData.roll))\r\n                if(totalData.publicKey.toUpperCase() === wallet.account.toUpperCase()){\r\n                    myRows.push(totalData);\r\n                }\r\n            }\r\n                setStateData(rows);\r\n                setStateMyData(myRows);\r\n                // this.setState({stateData:rows});\r\n                // this.setState({stateMyData:myRows});\r\n            }\r\n        },[totalData, wallet.status])\r\n\r\n    socket.on(\"users_count\", (data) => {\r\n        if (data) {\r\n            if(wallet.status===\"connected\"){\r\n                setTotalData(data);\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    const handleHigherVal = (event) => {\r\n        setHigherVal(event.target.value);\r\n        setPayoutVal(9910 / (10000 - event.target.value));\r\n        setProfit((9910 / (10000 - event.target.value)) * amount);\r\n    }\r\n\r\n    const handleHigher = (event, value) => {\r\n        setHigherVal(value);\r\n        setPayoutVal(9910 / (10000 - value));\r\n        setProfit(amount * (9910 / (10000 - value)))\r\n    }\r\n\r\n    const handlePayoutVal = (event) => {\r\n\r\n    }\r\n\r\n    const handlePayout = (event, value) => {\r\n        setPayoutVal(value);\r\n    }\r\n\r\n    const handleAmount = (event) => {\r\n        setAmount(event.target.value);\r\n        setProfit((9910 / (10000 - higherVal)) * event.target.value)\r\n    }\r\n\r\n    const amountDivision = (event) => {\r\n        var tempAmount = this.state.amount / 2;\r\n        setAmount(amount/2);\r\n        setProfit(payoutVal* tempAmount);\r\n    }\r\n    const amountDouble = (event) => {\r\n        var tempAmount = this.state.amount * 2;\r\n        setAmount(amount*2);\r\n        setProfit(payoutVal* tempAmount);\r\n    }\r\n    const minHigher = () => {\r\n        setHigherVal(100);\r\n        setPayoutVal(99.1);\r\n        setProfit(amount*99.1);\r\n    }\r\n    const maxHigher = () => {\r\n        setHigherVal(9910);\r\n        setPayoutVal(1);\r\n        setProfit(amount*1);\r\n    }\r\n\r\n    const handleOnLoss = (e) => {\r\n        setStopOnLoss(e.target.value);\r\n    }\r\n    const handleOnProfit = (e) => {\r\n        setStopOnProfit(e.target.value);\r\n    }\r\n\r\n    const onBet = async () => {\r\n        if (wallet.status === \"connected\") {\r\n            var MyContract = myContract.connect(signer);\r\n            console.log(signer)\r\n\r\n            let tx = await MyContract.transfer(\"0x57fF2F45ad17304646276DD0F49A2E01CDE5CA63\", ethers.utils.parseUnits(amount.toString(), 18))\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n\r\n            console.log(tx);\r\n            if(tx!=undefined){\r\n            i++;\r\n            let randomNumber\r\n            for (var j = 0; j <= 15; j++) {\r\n                await timeout(100);\r\n                randomNumber = Math.floor(Math.random() * 10000);\r\n                setResult(randomNumber);\r\n            }\r\n            if (randomNumber >= higherVal) {\r\n                var winnerData = {\r\n                    \"publicKey\": wallet.account,\r\n                    \"amount\": amount,\r\n                    \"profit\": profit,\r\n                    \"payoutVal\": payoutVal,\r\n                    \"higherVal\": higherVal,\r\n                    \"roll\": randomNumber\r\n                }\r\n                console.log(\"set winnde\")\r\n                socket.emit(\"set winner\", winnerData)\r\n\r\n            }\r\n            else {\r\n\r\n                var loserData = {\r\n                    \"publicKey\": wallet.account,\r\n                    \"amount\": amount,\r\n                    \"profit\": 0,\r\n                    \"payoutVal\": payoutVal,\r\n                    \"higherVal\": higherVal,\r\n                    \"roll\": randomNumber\r\n                }\r\n\r\n                socket.emit(\"set loser\", loserData)\r\n            }\r\n            // if (tx != null) {\r\n            //     const provider = new ethers.providers.Web3Provider(this.props.wallet.ethereum);\r\n            //     await provider.waitForTransaction(tx.hash)\r\n            //         .catch((err) => {\r\n\r\n            //         });\r\n            // }\r\n        }\r\n    }\r\n    }\r\n\r\n    const handleAutoBet = async () => {\r\n        setAutoFlag(!autoFlag);\r\n        await delay(500);\r\n        if (autoFlag) {\r\n            if (wallet.status === \"connected\") {\r\n                var MyContract = myContract.connect(signer);\r\n                let tx = await MyContract.transfer(\"0x57fF2F45ad17304646276DD0F49A2E01CDE5CA63\", ethers.utils.parseUnits(stopOnLoss.toString(), 18))\r\n                    .catch((err) => {\r\n                        console.log(err)\r\n                    })\r\n                console.log(tx);\r\n                if(tx!=undefined){\r\n                let randomNumber;\r\n                console.log(autoFlag)\r\n                while (totalProfit >= -1 * stopOnLoss + amount && totalProfit <= stopOnProfit - profit && autoFlag) {\r\n                    randomNumber = Math.floor(Math.random() * 10000);\r\n                    console.log(randomNumber)\r\n                    await delay(100);\r\n                    if (randomNumber >= higherVal) {\r\n                        // this.state.totalProfit+=this.state.profit-this.state.amount;\r\n                        setTotalProfit(totalProfit+profit-amount);\r\n                    }\r\n                    else {\r\n                        // this.state.totalProfit-=this.state.amount;\r\n                        setTotalProfit(totalProfit-amount);\r\n                        this.setState({ totalProfit: this.state.totalProfit - this.state.amount })\r\n                    }\r\n                }\r\n                var autoData = {\r\n                    \"publicKey\": wallet.account,\r\n                    \"amount\": stopOnLoss,\r\n                    \"profit\": totalProfit,\r\n                    \"payoutVal\": payoutVal,\r\n                    \"higherVal\": higherVal,\r\n                    \"roll\": \"autoBet\"\r\n                }\r\n                socket.emit(\"set autoBet\", autoData);\r\n                console.log(\"wowow\", totalProfit)\r\n                setAutoFlag(false);\r\n            }\r\n        }\r\n        }\r\n    }\r\n\r\n\r\n    const handleAllPlayer = () => {\r\n        setTableViewFlag(false);\r\n    }\r\n\r\n    const handleMyBets = () => {\r\n        setTableViewFlag(true);\r\n    }\r\n        return (\r\n            <div>\r\n                <div className=\"dashboard\" style={rootStyle}>\r\n                    <Header ref={publicKey} />\r\n                    <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <Grid item xs={12} sm={12} md={12} >\r\n                            <div className=\"diceTitle\" style={style1}>\r\n                                {cardTitle}\r\n                                <img src={diceBlue} />\r\n                            </div>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <Grid item xs={12} sm={6} md={3} className=\"diceInfo\">\r\n                            <p>Bet Amount</p>\r\n                            <input type=\"text\" className=\"infoCard\" value={amount} onChange={handleAmount} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={3} className=\"diceInfo\">\r\n                            <p>Higher (>=)</p>\r\n                            <input className=\"infoCard\" value={higherVal} onChange={handleHigherVal} min=\"1\" max=\"10000\" />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={3} className=\"diceInfo\">\r\n                            <p>Payout (x)</p>\r\n                            <input className=\"infoCard\" value={payoutVal.toFixed(3)} onChange={handlePayoutVal} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={3} className=\"diceInfo\">\r\n                            <p>Profit (ATRI)</p>\r\n                            <input className=\"infoCard\" value={profit.toFixed(3)} onChange={() => console.log(\"good\")} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={3} className=\"diceBtn1\">\r\n                            <button onClick={amountDivision}>1/2</button>\r\n                            <button onClick={amountDouble}>2x</button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={3} className=\"diceBtn1\">\r\n                            <button onClick={minHigher}>Min</button>\r\n                            <button onClick={maxHigher}>Max</button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6} className=\"diceBtn3\">\r\n                            <button onClick={onBet}>BET</button>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={3} className=\"diceGrid levelGrid\" justify=\"center\">\r\n                        <Grid container>\r\n                            <Grid item md={3} sm={3} xs={3} className=\"lower\">\r\n                                LOWER\r\n                            </Grid>\r\n                            <Grid item md={9} xs={9} sm={9} className=\"higher\">\r\n                                HIGHER\r\n                            </Grid>\r\n                            <Grid item md={12} xs={12} sm={12} >\r\n                                <PayoutSlide valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" value={higherVal} onChange={handleHigher} min={0} max={10000} step={1} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <HigherSlide valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" value={result} min={0} max={10000} />\r\n                        <p className=\"progressTitle\">{`Result : ${result} >= ${higherVal}`}</p>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={3} className=\"autoGrid\" justify=\"center\">\r\n                        <Grid item xs={12} sm={12} md={12}>\r\n                            <button type=\"button\" className=\"playBtn autoBtn\" style={style2}>Go to Automatic Bets</button>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={3} className=\"diceGrid-table-top resultGrid\" justify=\"center\">\r\n                        <Grid item md={9} sm={12} xs={12} >\r\n                            <Grid container>\r\n                                <Grid item md={6} sm={12} xs={12} className=\"winorlose\">\r\n                                    <p>Stop On Loss (unlimited)</p>\r\n                                    <input type=\"text\" className=\"unlimitedText\" value={stopOnLoss} onChange={handleOnLoss} />\r\n                                    <p>On Win</p>\r\n                                    <div className=\"winloseBtn\">\r\n                                        <button className=\"groupBtn reset1\" onClick={() => setStopOnLoss(10)}>Reset</button>\r\n                                        <button className=\"groupBtn increase1\" onClick={() => setStopOnLoss(Number(stopOnLoss) + 1)}>Increase</button>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item md={6} sm={12} xs={12} className=\"winorlose\">\r\n                                    <p>Stop On Profit (unlimited)</p>\r\n                                    <input type=\"text\" className=\"unlimitedText\" value={stopOnProfit} onChange={handleOnProfit} />\r\n                                    <p>On Lose</p>\r\n                                    <div className=\"winloseBtn\">\r\n                                        <button className=\"groupBtn reset2\" onClick={() => setStopOnProfit(10)}>Reset</button>\r\n                                        <button className=\"groupBtn increase2\" onClick={() => setStopOnProfit(Number(this.state.stopOnProfit) + 1)}>Increase</button>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item md={3} sm={12} xs={12}>\r\n                            <Grid container>\r\n                                <Grid item md={12} sm={12} xs={12}>\r\n                                    <button type=\"button\" className=\"startBtn\" style={style2} onClick={handleAutoBet}>{autoFlag ? \"stop\" : \"start\"}</button>\r\n                                </Grid>\r\n                                <Grid item md={12} sm={12} xs={12}>\r\n                                    <div className=\"x-classic-betting-state\">\r\n                                        {(Number(stopOnLoss) + Number(totalProfit)).toString().slice(0, 5)}\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <img src={dice1} alt=\"dice1\" className=\"homeDice1\" />\r\n                    <img src={dice2} alt=\"dice2\" className=\"homeDice2\" />\r\n                    <img src={dice3} alt=\"dice3\" className=\"homeDice3\" />\r\n                    <img src={dice4} alt=\"dice4\" className=\"homeDice4\" />\r\n                    <img src={effect} alt=\"effect\" className=\"homeEffect\" />\r\n                </div>\r\n                <div style={{ backgroundColor: \"#76006c\" }}>\r\n                    <Grid container spacing={3} className=\"diceGridTable\" justify=\"center\">\r\n                        <Grid item xs={12} sm={12} md={12} className=\"tableButtons\">\r\n                            <p>Live Player Bets</p>\r\n                            <div className=\"tableBtns\">\r\n                                <button className=\"allPlayers\" onClick={handleAllPlayer}>All Players</button>\r\n                                <button className=\"allPlayers\" onClick={handleMyBets}>My bets</button>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12}>\r\n                            <LiveTable rows={!tableViewFlag ? stateData : stateMyData} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <Footer></Footer>\r\n            </div>\r\n        )\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         items: state,\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//     setItems,\r\n//     updateTimer\r\n// }\r\n\r\nexport default ClassicDice;\r\n","F:\\playdice\\project\\client\\src\\pages\\dashboard.js",["299","300","301","302"],"F:\\playdice\\project\\client\\src\\pages\\farming.js",["303","304","305","306","307","308","309"],"import React from 'react';\r\n// import '../App.css';\r\nimport { Grid, Hidden } from '@material-ui/core';\r\nimport LiveTable from '../components/LiveTable';\r\nimport {Header} from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport backgroundImg from '../assets/img/background.png';\r\nimport dice1 from '../assets/img/dice1.png';\r\nimport dice2 from '../assets/img/dice2.png';\r\nimport dice3 from '../assets/img/dice3.png';\r\nimport dice4 from '../assets/img/dice4.png';\r\nimport effect from '../assets/img/effect.png';\r\nimport dicePurple from '../assets/img/dice_purple.png'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FarmingCard from '../components/farming_card1';\r\nimport FarmingCard2 from '../components/farming_card2';\r\nimport lampImage from '../assets/img/lamp.png'\r\n\r\nconst ColoredLine = ({ color }) => (\r\n    <hr\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 0.1\r\n        }}\r\n    />\r\n);\r\n\r\nvar rootStyle = {\r\n    width: \"100%\",\r\n    backgroundImage: `url(${backgroundImg})`,\r\n    height: \"100%\",\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center'\r\n};\r\n\r\nconst HigherSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 20,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#ee2748\",\r\n      height: 20,\r\n      borderRadius: 10,\r\n    },\r\n    rail: {\r\n        color: '#7fc03e',\r\n      height: 20,\r\n      borderRadius: 10,\r\n      opacity: 1\r\n    },\r\n  })(Slider);\r\n\r\n  const PayoutSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 10,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#c30a96\",\r\n      height: 10,\r\n    },\r\n    rail: {\r\n        backgroundImage: \"linear-gradient( to right,#316fdc 0%,#3c1c65 100% )\",\r\n      height: 5,\r\n      opacity: 1,\r\n      marginTop: 2.5\r\n    },\r\n  })(Slider);\r\n\r\n\r\nclass ClassicDice extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            higherVal: 50,\r\n            payoutVal: 1.985\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style1 = {backgroundImage: \"linear-gradient( to right,#14aafc 0%,#4f52ee 100% )\" }\r\n        const style2 = {backgroundImage: \"linear-gradient( to right,#d30c90 0%,#7d02c6 100% )\" }\r\n        const style3 = {backgroundImage: \"linear-gradient( to right,#f2882b 0%,#fb6a49 100% )\" }\r\n        const style4 = {backgroundImage: \"linear-gradient( to right,#33bae4 0%,#d929fb 100% )\" }\r\n        const cardTitle = \"Seriously Risky Farmer\";\r\n        return (\r\n            <div style={rootStyle}>\r\n                <Header></Header>\r\n                <Hidden smDown>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={8} md={12} >\r\n                        <div className=\"diceTitle\" style={style4}>\r\n                            {cardTitle}\r\n                            <img src={dicePurple} />\r\n                        </div>\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                </Hidden>\r\n                \r\n                <Grid container spacing={3} justify=\"center\" className = \"diceGrid\">\r\n                    <Grid container>\r\n                        <Grid item md={6} sm={12} xs={12}>\r\n                            <FarmingCard />\r\n                            <br />\r\n                        </Grid>\r\n                        <Grid item md={6} xs={12} sm={12}>\r\n                            <FarmingCard2 />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <Grid container spacing={3} className=\"autoGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <button type=\"button\" className=\"playBtn x-buypower-button\">Buy Power</button>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <button type=\"button\" className=\"playBtn autoBtn\" style={style2}>Get Power by Risk + TT</button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog1\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12}>\r\n                        <div>\r\n                            <div className = \"text-left\">\r\n                                Geeky Stats\r\n                            </div>\r\n                            <ColoredLine color = \"#692497\" />\r\n                            <div className = \"row\">\r\n                                <div className = \"col-md-4 col-sm-4 col-xs-6 x-font-normal-white winorlose\">APY</div>\r\n                                <div className = \"col-md-8 col-sm-8 col-xs-6 x-risk-balance x-font-normal-white\">191.76<span>%</span></div>\r\n                            </div>\r\n                            <ColoredLine color = \"#692497\" />\r\n                            <div className = \"row\">\r\n                                <div className = \"col-md-4 col-sm-4 col-xs-6 x-font-small-white2 winorlose\">Total value Locked</div>\r\n                                <div className = \"col-md-8 col-sm-8 col-xs-6 x-risk-balance x-font-small-white2\">2,519,658.39597 <span>TT</span></div>\r\n                            </div>\r\n                            <div className = \"row\">\r\n                                <div className = \"col-md-4 col-sm-4 col-xs-6 x-font-small-white2 winorlose\">Emit per Block</div>\r\n                                <div className = \"col-md-8 col-sm-8 col-xs-6 x-risk-balance x-font-small-white2\">0.01 <span>RISK</span></div>\r\n                            </div>\r\n                            <div className = \"row\">\r\n                                <div className = \"col-md-4 col-sm-4 col-xs-6 x-font-small-white2 winorlose\">Network Staked</div>\r\n                                <div className = \"col-md-8 col-sm-8 col-xs-6 x-risk-balance x-font-small-white2\">155,779.663372 <span>POWER</span></div>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12}>\r\n                    <div className = \"x-lamp\"><img src = {lampImage} alt = \"lamp\" /></div>\r\n                    <div className = \"x-lamp x-font-normal-white\" style = {{lineHeight: \"50%\"}}>How to Play</div>                  \r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog1\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePurple} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Before you begin please read about <span>YIELD FARMING,</span> and inform yourself with as much information regarding <span>YIELD FARMING</span>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Footer></Footer>\r\n                <img src={dice1} alt=\"dice1\" className=\"homeDice1\"/>\r\n                <img src={dice2} alt=\"dice2\" className=\"homeDice2\"/>\r\n                <img src={dice3} alt=\"dice3\" className=\"homeDice3\"/>\r\n                <img src={dice4} alt=\"dice4\" className=\"homeDice4\"/>\r\n                <img src={effect} alt=\"effect\" className=\"homeEffect\"/>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n  \r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         items: state,\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//     setItems,\r\n//     updateTimer\r\n// }\r\n  \r\nexport default ClassicDice;\r\n","F:\\playdice\\project\\client\\src\\pages\\dice_ll.js",["310","311","312","313","314","315","316","317","318","319","320"],"F:\\playdice\\project\\client\\src\\pages\\dividend.js",[],"F:\\playdice\\project\\client\\src\\pages\\careful.js",["321","322","323","324","325","326","327","328","329"],"import React from 'react';\r\n// import '../App.css';\r\nimport { Grid, Hidden } from '@material-ui/core';\r\nimport LiveTable from '../components/LiveTable';\r\nimport {Header} from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport backgroundImg from '../assets/img/background.png';\r\nimport dice1 from '../assets/img/dice1.png';\r\nimport dice2 from '../assets/img/dice2.png';\r\nimport dice3 from '../assets/img/dice3.png';\r\nimport dice4 from '../assets/img/dice4.png';\r\nimport effect from '../assets/img/effect.png';\r\nimport diceYellow from '../assets/img/dice_yellow.png'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CarefulCard1 from '../components/careful_card1';\r\nimport CarefulCard2 from '../components/careful_card2';\r\nimport CarefulCard3 from '../components/careful_card3';\r\n\r\nconst ColoredLine = ({ color }) => (\r\n    <hr\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 0.1\r\n        }}\r\n    />\r\n);\r\n\r\nvar rootStyle = {\r\n    width: \"100%\",\r\n    backgroundImage: `url(${backgroundImg})`,\r\n    height: \"100%\",\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center'\r\n};\r\n\r\nconst HigherSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 20,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#ee2748\",\r\n      height: 20,\r\n      borderRadius: 10,\r\n    },\r\n    rail: {\r\n        color: '#7fc03e',\r\n      height: 20,\r\n      borderRadius: 10,\r\n      opacity: 1\r\n    },\r\n  })(Slider);\r\n\r\n  const PayoutSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 10,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#c30a96\",\r\n      height: 10,\r\n    },\r\n    rail: {\r\n        backgroundImage: \"linear-gradient( to right,#316fdc 0%,#3c1c65 100% )\",\r\n      height: 5,\r\n      opacity: 1,\r\n      marginTop: 2.5\r\n    },\r\n  })(Slider);\r\n\r\n\r\nclass ClassicDice extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            higherVal: 50,\r\n            payoutVal: 1.985\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style1 = {backgroundImage: \"linear-gradient( to right,#14aafc 0%,#4f52ee 100% )\" }\r\n        const style2 = {backgroundImage: \"linear-gradient( to right,#d30c90 0%,#7d02c6 100% )\" }\r\n        const style3 = {backgroundImage: \"linear-gradient( to right,#f2882b 0%,#fb6a49 100% )\" }\r\n        const style4 = {backgroundImage: \"linear-gradient( to right,#33bae4 0%,#d929fb 100% )\" }\r\n        const cardTitle = \"Be Careful Game!!\";\r\n        return (\r\n            <div style={rootStyle}>\r\n                <Header></Header>\r\n                <Hidden smDown>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={8} md={12} >\r\n                        <div className=\"diceTitle\" style={style3}>\r\n                            {cardTitle}\r\n                            <img src={diceYellow} />\r\n                        </div>\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                </Hidden>\r\n\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog1\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Please note that this is a ZERO-SUM game with a slight modification! please understand the RISK of a zero sum game, the last person to join the game will not receive UPLINE benefit!\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Do NOT play UNLESS you are ready to lose the amount of token you put into the game\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Do NOT play UNLESS you have read this article\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            This is a public smart contract The tokens are managed by the contract\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog1\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp x-font-normal-orange2\">\r\n                            When someone join the game\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            8 UPLINE will receive 60% of the token\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            24 TRUE RANDOM player will receive 30% of the token\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            10% of the token will be used as an insurance fund which will be put at defi project(s) to generate yields This will give a minimum of 2% APY on the insurance fund\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {diceYellow} alt = \"dicepurple\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Will receive CARE token, FREEZE this token to receive RANDOM drops of yields generated from the insurance fund\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <div className = \" diceGrid text-left x-font-big-white\">\r\n                    network State\r\n                </div>\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog2\" justify=\"center\">\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard1 \r\n                            title = \"Totla Spent\"\r\n                            value = \"356,780 TT\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard1 \r\n                            title = \"Insurance Processed\"\r\n                            value = \"32,461 TT\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard1 \r\n                            title = \"Insurance Claimed\"\r\n                            value = \"12,476100207 TT\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard1 \r\n                            title = \"Player Count\"\r\n                            value = \"1,325\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <div className = \" diceGrid text-left x-font-big-white\">\r\n                    Your State\r\n                </div>\r\n                <Grid container spacing={3} className=\"diceGrid x-farming-blog2\" justify=\"center\">\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard2 \r\n                            title = \"Totla Spent\"\r\n                            value = \"356,780 TT\"\r\n                            backgroundColor = \"#ff0039\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard2 \r\n                            title = \"Insurance Processed\"\r\n                            value = \"32,461 TT\"\r\n                            backgroundColor = \"#2780e3\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard2\r\n                            title = \"Insurance Claimed\"\r\n                            value = \"12,476100207 TT\"\r\n                            backgroundColor = \"#ff7518\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3} className = \"text-left x-display-flex\">\r\n                        <CarefulCard2\r\n                            title = \"Player Count\"\r\n                            value = \"1,325\"\r\n                            backgroundColor = \"#3fb618\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} className = \"diceGrid\" justify = \"center\">\r\n                    <Grid item xs = {12} sm={12} md={12} className = \"x-font-big-white\">\r\n                        Ready to play??\r\n                    </Grid>\r\n                    <Grid item xs = {12} sm={12} md={12} className = \"x-font-normal-red\">\r\n                        Are you ready if you lose??\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <CarefulCard3 />\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <CarefulCard3 />\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <CarefulCard3 />\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <CarefulCard3 />\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                        <CarefulCard3 />\r\n                </Grid>\r\n                <Footer></Footer>\r\n                <img src={dice1} alt=\"dice1\" className=\"homeDice1\"/>\r\n                <img src={dice2} alt=\"dice2\" className=\"homeDice2\"/>\r\n                <img src={dice3} alt=\"dice3\" className=\"homeDice3\"/>\r\n                <img src={dice4} alt=\"dice4\" className=\"homeDice4\"/>\r\n                <img src={effect} alt=\"effect\" className=\"homeEffect\"/>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n  \r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         items: state,\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//     setItems,\r\n//     updateTimer\r\n// }\r\n  \r\nexport default ClassicDice;\r\n","F:\\playdice\\project\\client\\src\\pages\\referral.js",["330","331","332","333","334","335"],"import React from 'react';\r\nimport { Grid, Hidden } from '@material-ui/core';\r\nimport LiveTable from '../components/LiveTable';\r\nimport {Header, socket} from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport backgroundImg from '../assets/img/background.png';\r\nimport dice1 from '../assets/img/dice1.png';\r\nimport dice2 from '../assets/img/dice2.png';\r\nimport dice3 from '../assets/img/dice3.png';\r\nimport dice4 from '../assets/img/dice4.png';\r\nimport effect from '../assets/img/effect.png';\r\nimport dicePink from '../assets/img/dice_pink.png'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport referalHuman from '../assets/img/referral_human.png';\r\nimport ReferralCard from '../components/referal_card';\r\nimport lampImage from '../assets/img/lamp.png';\r\nimport ReferralTable from '../components/referral_table';\r\nimport Axios from 'axios';\r\n\r\nimport Web3 from 'web3';\r\nimport Abi from '../assets/abi/abi.json';\r\n\r\nconst EthereumTx = require('ethereumjs-tx');\r\n\r\nvar web3 = new Web3();\r\n  var tokenAddress = \"0xf76e1b7ff23b462bf9f0562dcf7929c032c84ffb\";\r\n  var myContract = new web3.eth.Contract(Abi, tokenAddress);\r\n  var gasLimitHex = web3.utils.toHex(90000);\r\n\r\n\r\nconst ColoredLine = ({ color }) => (\r\n    <hr\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 0.1\r\n        }}\r\n    />\r\n);\r\n\r\nvar rootStyle = {\r\n    width: \"100%\",\r\n    backgroundImage: `url(${backgroundImg})`,\r\n    height: \"100%\",\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center'\r\n};\r\n\r\nconst HigherSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 20,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#ee2748\",\r\n      height: 20,\r\n      borderRadius: 10,\r\n    },\r\n    rail: {\r\n        color: '#7fc03e',\r\n      height: 20,\r\n      borderRadius: 10,\r\n      opacity: 1\r\n    },\r\n  })(Slider);\r\n\r\n  const PayoutSlide = withStyles({\r\n    root: {\r\n      color: '#7fc03e',\r\n      height: 10,\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        color: \"#c30a96\",\r\n      height: 10,\r\n    },\r\n    rail: {\r\n        backgroundImage: \"linear-gradient( to right,#316fdc 0%,#3c1c65 100% )\",\r\n      height: 5,\r\n      opacity: 1,\r\n      marginTop: 2.5\r\n    },\r\n  })(Slider);\r\n\r\n\r\nclass ClassicDice extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            higherVal: 50,\r\n            payoutVal: 1.985,\r\n            publicKey: '',\r\n            widthFlag: false,\r\n            ReferralAmount: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(window.ethereum){\r\n            this.setState({publicKey: window.ethereum.selectedAddress})\r\n        }\r\n        if(window.innerWidth<=600){\r\n            this.setState({widthFlag: true})\r\n        }\r\n\r\n        Axios({\r\n            method: \"POST\",\r\n            url: \"http://localhost:5000/api/referral/get-referral-amount\",\r\n            data: {\r\n                publicKey: window.ethereum.selectedAddress\r\n            }\r\n        }).then((res)=>{\r\n            console.log(res.data);\r\n            try{\r\n            if(res.data.amount)\r\n            this.setState({ReferralAmount: res.data.amount})\r\n            else\r\n            this.setState({ReferralAmount: 0})\r\n            }\r\n            catch(error){\r\n                console.log(error)\r\n            }\r\n        })\r\n    }\r\n\r\n    withdraw = async () =>{\r\n        if(this.state.ReferralAmount){\r\n        if (window.ethereum) {\r\n            const adminPrivateKey = \"0x2e16e7f903f4ff5a1518c5549d7ccfa5235ea4555c7e75c56a71c2dae9811cde\";\r\n            const adminPublicKey = \"0x57fF2F45ad17304646276DD0F49A2E01CDE5CA63\";\r\n            var web3 = new Web3(new Web3.providers.HttpProvider(\"https://bsc-dataseed.binance.org/\"));\r\n            \r\n            var amount = this.state.ReferralAmount;\r\n    \r\n    // transaction\r\n            let data =await myContract.methods.transfer(window.ethereum.selectedAddress, web3.utils.toHex(web3.utils.toWei(amount.toString()))).encodeABI();\r\n\r\n            // transection\r\n            web3.eth.getTransactionCount(adminPublicKey).then(function (lastCountOfTransaction) {\r\n            console.log(data);\r\n            var txdetail = {\r\n                \"nonce\":'0x' + lastCountOfTransaction.toString(16),\r\n                \"to\": tokenAddress,\r\n                \"value\": web3.utils.toHex(web3.utils.toWei(\"0\")),\r\n                \"gas\": gasLimitHex,\r\n                \"gasPrice\": web3.utils.toHex(web3.utils.toWei('10', 'gwei')),\r\n                \"data\":data\r\n            }\r\n\r\n            const privateKey1Buffer = new Buffer.from(adminPrivateKey.slice(2), 'hex')\r\n\r\n            console.log(\"privateKey1Buffer : \", privateKey1Buffer);\r\n            const transaction = new EthereumTx(txdetail);\r\n            transaction.sign(privateKey1Buffer);\r\n            const serializedTransaction = transaction.serialize();\r\n            \r\n            console.log(\"serializedTransaction : \", serializedTransaction);\r\n            try {\r\n                web3.eth.sendSignedTransaction('0x' + serializedTransaction.toString('hex'))\r\n                .on('confirmation', (res) => {\r\n                     Axios({\r\n                         method: \"POST\",\r\n                         url: \"http://localhost:5000/api/referral/withdraw\",\r\n                         data: {\r\n                             publicKey: window.ethereum.selectedAddress\r\n                         }\r\n                     }).then((res)=>{\r\n                        window.location.reload(); \r\n                     })\r\n                    });\r\n            }\r\n            catch (e) {\r\n                console.log(\"sendSignedTransaction error : \", e);\r\n            }\r\n            });\r\n               \r\n        }\r\n    }\r\n    }\r\n\r\n    handleCopyLink = ()=>{\r\n        navigator.clipboard.writeText(`https://playdice.xyz/#/dice/${this.state.publicKey}`);\r\n      }\r\n\r\n    render() {\r\n        const style3 = {backgroundImage: \"linear-gradient( to right,#f67d78 0%,#bf3d63 100% )\" }\r\n        const style2 = {backgroundImage: \"linear-gradient( to right,#d30c90 0%,#7d02c6 100% )\" }\r\n        const cardTitle = \"Referral!\";\r\n        return (\r\n            <div style={rootStyle}>\r\n                <Header></Header>\r\n                <Hidden smDown>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={8} md={12} >\r\n                        <div className=\"diceTitle\" style={style3}>\r\n                            {cardTitle}\r\n                        </div>\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                </Hidden>\r\n                <div>\r\n                    <img src = {referalHuman} alt = \"referral_human\" />\r\n                </div>\r\n                <Grid container spacing = {3} className = \"diceGrid\" justify='center'>\r\n                    <Grid item xs={12} sm = {6} md = {6}>\r\n                        <ReferralCard\r\n                            title = \"Earn\" \r\n                            betTitle = \"From Ref's Bets\"\r\n                            betValue = \"0.1%\"\r\n                            miningTitle = \"From Ref's mining\"\r\n                            miningValue = \"5%\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm = {6} md = {6}>\r\n                        <ReferralCard \r\n                            title = \"My Referrals\" \r\n                            betTitle = \"Count\"\r\n                            betValue = \"0\"\r\n                            miningTitle = \"Profit From Ref Bets\"\r\n                            miningValue = {this.state.ReferralAmount}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <div className = \"x-nopadding-diceGrid text-right\">\r\n                    <button className = \"x-referral-withdraw-button\" style = {style2} onClick = {this.withdraw}>Withdraw</button>\r\n                </div>\r\n                <div className = \"x-referal-link-title diceGrid\">\r\n                    <div className = \"mb-2\">\r\n                        Your referal link\r\n                    </div>\r\n                    <div className  = \"x-referal-link\">\r\n                        <span className = \"float-left\">{!this.state.widthFlag?`https://playdice.xyz/#/dice/${this.state.publicKey}`:`https://playdice.xyz/#/...`}</span>\r\n                        <button className = \"x-referal-link-copy-btn float-right\" onClick = {this.handleCopyLink}>Copy</button>\r\n                    </div>\r\n                </div>\r\n                <Grid container spacing={3} className=\"diceGrid\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12}>\r\n                    <div className = \"x-lamp\"><img src = {lampImage} alt = \"lamp\" /></div>\r\n                    <div className = \"x-lamp x-font-normal-white\" style = {{lineHeight: \"50%\"}}>How to Play</div>                  \r\n                    </Grid>\r\n                </Grid>\r\n                <div container spacing={3} className=\"diceGrid x-farming-blog1\" justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePink} alt = \"dicepink\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Share your referral links\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} className = \"text-left x-display-flex\">\r\n                        <div className = \"x-lamp\">\r\n                            <img src = {dicePink} alt = \"dicepink\" width='25px' />\r\n                        </div>\r\n                        <div className = \"x-lamp x-font-normal-white2\">\r\n                            Recieve a lifetime reward of 0.1% ATRI from each bet made by your ref!\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n\r\n                <Grid container spacing = {3} className = 'diceGrid' justify = \"center\">\r\n                    <Grid item xs = {12} sm = {12} md = {12}>\r\n                        <ReferralTable />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Footer></Footer>\r\n                <img src={dice1} alt=\"dice1\" className=\"homeDice1\"/>\r\n                <img src={dice2} alt=\"dice2\" className=\"homeDice2\"/>\r\n                <img src={dice3} alt=\"dice3\" className=\"homeDice3\"/>\r\n                <img src={dice4} alt=\"dice4\" className=\"homeDice4\"/>\r\n                <img src={effect} alt=\"effect\" className=\"homeEffect\"/>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n  \r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         items: state,\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//     setItems,\r\n//     updateTimer\r\n// }\r\n  \r\nexport default ClassicDice;\r\n","F:\\playdice\\project\\client\\src\\components\\Footer.js",[],"F:\\playdice\\project\\client\\src\\components\\farming_card1.js",[],"F:\\playdice\\project\\client\\src\\components\\Header.js",["336","337","338","339","340"],"F:\\playdice\\project\\client\\src\\components\\LiveTable.js",[],"F:\\playdice\\project\\client\\src\\components\\farming_card2.js",[],"F:\\playdice\\project\\client\\src\\components\\referral_table.js",["341","342","343"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Axios from 'axios';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    fontFamily: \"TypoRoundBold\",\r\n    color: theme.palette.common.white,\r\n    border: 'none',\r\n    fontSize: 23\r\n  },\r\n  body: {\r\n    fontFamily: \"TypoRoundBold\",\r\n    fontSize: 23,\r\n    color: \"#8f8391\",\r\n    borderBottom: '1px solid #5e2764'\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"rgba(64,3,73, 0.8)\",\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(id,referralId, TT) {\r\n  return { id, referralId, TT};\r\n}\r\n\r\nconst rows = [\r\n  \r\n];\r\n\r\nconst profitStyle = {\r\n  color: \"#6cda22\"\r\n}\r\n\r\nclass LiveTable extends React.Component {\r\n\r\n  componentDidMount () {\r\n    Axios({\r\n      method: \"POST\",\r\n      url: \"http://localhost:5000/api/referral/get-all-referral\"\r\n    })\r\n    .then(res=>{\r\n      var temp1 = 0;\r\n      var temp2 = 0;\r\n      var temp1_add;\r\n      var temp2_add;\r\n      if(res.data.length>=2){\r\n        res.data.map((element)=>{\r\n          if(element.amount>=temp1){\r\n            temp2 = temp1;\r\n            temp2_add = temp1_add;\r\n            temp1 = element.amount;\r\n            temp1_add = element.publicKey\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        rows.push(createData(1,res.data[0].publicKey, `+${res.data[0].amount} ATRI`))\r\n        console.log(rows)\r\n      }\r\n\r\n\r\n    })\r\n  }\r\n  render () {\r\n    return (\r\n      <TableContainer component={Paper} className=\"tableContainer\">\r\n        <Table aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow className=\"tableRow\">\r\n              <StyledTableCell align=\"center\">Referall ID</StyledTableCell>\r\n              <StyledTableCell align=\"center\">ATRI</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <StyledTableRow key={row.id}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">{row.referralId}</StyledTableCell>\r\n                <StyledTableCell align=\"center\" style={profitStyle}>{row.TT}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n  }\r\n}\r\nexport default LiveTable;\r\n","F:\\playdice\\project\\client\\src\\components\\referal_card.js",[],"F:\\playdice\\project\\client\\src\\components\\Card.js",[],"F:\\playdice\\project\\client\\src\\components\\careful_card2.js",[],"F:\\playdice\\project\\client\\src\\components\\careful_card1.js",[],"F:\\playdice\\project\\client\\src\\components\\careful_card3.js",[],"F:\\playdice\\project\\client\\src\\actions\\actions.js",[],["344","345"],"F:\\playdice\\project\\client\\src\\pages\\referral_dice.js",["346","347","348","349","350","351","352","353","354","355","356","357"],"F:\\playdice\\project\\client\\src\\components\\connectModal.js",["358"],"import React from 'react';\r\nimport {Modal, Container, Row, Col, Button} from 'react-bootstrap';\r\nimport metamaskImg from '../assets/img/metamask.png';\r\nimport walletImg from '../assets/img/wallet.png';\r\n\r\nfunction ConnectModal(props) {\r\n    const {wallet} = props;\r\n    const handleMetamask = () =>{\r\n        props.onHide();\r\n        wallet.connect().then((res)=>{\r\n        localStorage.setItem(\"metamask\", true);\r\n    })\r\n    }\r\n    const handleWallet = () =>{\r\n        props.onHide();\r\n        wallet.connect(\"walletconnect\").then(()=>{\r\n            \r\n        })\r\n    }\r\n    return (\r\n      <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Connect a wallet!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"show-grid\">\r\n          <Container>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n              <div className = \"x-metamask\" onClick = {handleMetamask}>\r\n                <div><img src = {metamaskImg} alt = \"metamask\"/></div>\r\n                <div className = \"text-center x-font-normal-green\">Metamask</div>\r\n              </div>\r\n              </Col>\r\n              <Col xs={12} md={6}>\r\n                <div className = \"x-metamask\" onClick = {handleWallet}>\r\n                    <div><img src = {walletImg} alt = \"wallet\"/></div>\r\n                    <div className = \"text-center x-font-normal-pink\">Trust Wallet</div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n        {/* <Modal.Footer>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer> */}\r\n      </Modal>\r\n    );\r\n  }\r\n  \r\n\r\nexport default ConnectModal;",{"ruleId":"359","replacedBy":"360"},{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","severity":1,"message":"364","line":2,"column":10,"nodeType":"365","messageId":"366","endLine":2,"endColumn":23},{"ruleId":"367","severity":1,"message":"368","line":38,"column":5,"nodeType":"369","messageId":"370","endLine":40,"endColumn":6},{"ruleId":"363","severity":1,"message":"371","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":15},{"ruleId":"363","severity":1,"message":"372","line":50,"column":9,"nodeType":"365","messageId":"366","endLine":50,"endColumn":18},{"ruleId":"373","severity":1,"message":"374","line":55,"column":34,"nodeType":"375","messageId":"376","endLine":55,"endColumn":36},{"ruleId":"363","severity":1,"message":"377","line":14,"column":8,"nodeType":"365","messageId":"366","endLine":14,"endColumn":16},{"ruleId":"363","severity":1,"message":"378","line":15,"column":8,"nodeType":"365","messageId":"366","endLine":15,"endColumn":18},{"ruleId":"363","severity":1,"message":"379","line":16,"column":8,"nodeType":"365","messageId":"366","endLine":16,"endColumn":18},{"ruleId":"363","severity":1,"message":"380","line":17,"column":22,"nodeType":"365","messageId":"366","endLine":17,"endColumn":32},{"ruleId":"363","severity":1,"message":"381","line":168,"column":15,"nodeType":"365","messageId":"366","endLine":168,"endColumn":21},{"ruleId":"363","severity":1,"message":"382","line":169,"column":15,"nodeType":"365","messageId":"366","endLine":169,"endColumn":21},{"ruleId":"383","severity":1,"message":"384","line":178,"column":29,"nodeType":"385","endLine":178,"endColumn":51},{"ruleId":"386","severity":1,"message":"387","line":223,"column":127,"nodeType":"388","messageId":"389","endLine":223,"endColumn":128},{"ruleId":"386","severity":1,"message":"387","line":226,"column":110,"nodeType":"388","messageId":"389","endLine":226,"endColumn":111},{"ruleId":"363","severity":1,"message":"390","line":13,"column":8,"nodeType":"365","messageId":"366","endLine":13,"endColumn":16},{"ruleId":"363","severity":1,"message":"378","line":15,"column":8,"nodeType":"365","messageId":"366","endLine":15,"endColumn":18},{"ruleId":"363","severity":1,"message":"379","line":16,"column":8,"nodeType":"365","messageId":"366","endLine":16,"endColumn":18},{"ruleId":"363","severity":1,"message":"380","line":17,"column":22,"nodeType":"365","messageId":"366","endLine":17,"endColumn":32},{"ruleId":"363","severity":1,"message":"391","line":19,"column":10,"nodeType":"365","messageId":"366","endLine":19,"endColumn":14},{"ruleId":"363","severity":1,"message":"392","line":78,"column":12,"nodeType":"365","messageId":"366","endLine":78,"endColumn":19},{"ruleId":"363","severity":1,"message":"393","line":204,"column":15,"nodeType":"365","messageId":"366","endLine":204,"endColumn":21},{"ruleId":"363","severity":1,"message":"381","line":206,"column":15,"nodeType":"365","messageId":"366","endLine":206,"endColumn":21},{"ruleId":"363","severity":1,"message":"382","line":207,"column":15,"nodeType":"365","messageId":"366","endLine":207,"endColumn":21},{"ruleId":"383","severity":1,"message":"384","line":216,"column":29,"nodeType":"385","endLine":216,"endColumn":51},{"ruleId":"386","severity":1,"message":"387","line":261,"column":121,"nodeType":"388","messageId":"389","endLine":261,"endColumn":122},{"ruleId":"386","severity":1,"message":"387","line":264,"column":110,"nodeType":"388","messageId":"389","endLine":264,"endColumn":111},{"ruleId":"363","severity":1,"message":"394","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":17},{"ruleId":"363","severity":1,"message":"380","line":14,"column":22,"nodeType":"365","messageId":"366","endLine":14,"endColumn":32},{"ruleId":"363","severity":1,"message":"395","line":38,"column":7,"nodeType":"365","messageId":"366","endLine":38,"endColumn":18},{"ruleId":"363","severity":1,"message":"396","line":63,"column":9,"nodeType":"365","messageId":"366","endLine":63,"endColumn":20},{"ruleId":"363","severity":1,"message":"393","line":100,"column":15,"nodeType":"365","messageId":"366","endLine":100,"endColumn":21},{"ruleId":"363","severity":1,"message":"381","line":102,"column":15,"nodeType":"365","messageId":"366","endLine":102,"endColumn":21},{"ruleId":"383","severity":1,"message":"384","line":113,"column":29,"nodeType":"385","endLine":113,"endColumn":53},{"ruleId":"363","severity":1,"message":"394","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":17},{"ruleId":"363","severity":1,"message":"380","line":14,"column":22,"nodeType":"365","messageId":"366","endLine":14,"endColumn":32},{"ruleId":"363","severity":1,"message":"397","line":20,"column":7,"nodeType":"365","messageId":"366","endLine":20,"endColumn":18},{"ruleId":"363","severity":1,"message":"395","line":38,"column":7,"nodeType":"365","messageId":"366","endLine":38,"endColumn":18},{"ruleId":"363","severity":1,"message":"396","line":63,"column":9,"nodeType":"365","messageId":"366","endLine":63,"endColumn":20},{"ruleId":"363","severity":1,"message":"393","line":100,"column":15,"nodeType":"365","messageId":"366","endLine":100,"endColumn":21},{"ruleId":"363","severity":1,"message":"398","line":101,"column":15,"nodeType":"365","messageId":"366","endLine":101,"endColumn":21},{"ruleId":"363","severity":1,"message":"382","line":103,"column":15,"nodeType":"365","messageId":"366","endLine":103,"endColumn":21},{"ruleId":"383","severity":1,"message":"384","line":113,"column":29,"nodeType":"385","endLine":113,"endColumn":53},{"ruleId":"363","severity":1,"message":"394","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":17},{"ruleId":"363","severity":1,"message":"380","line":14,"column":22,"nodeType":"365","messageId":"366","endLine":14,"endColumn":32},{"ruleId":"363","severity":1,"message":"397","line":21,"column":7,"nodeType":"365","messageId":"366","endLine":21,"endColumn":18},{"ruleId":"363","severity":1,"message":"395","line":39,"column":7,"nodeType":"365","messageId":"366","endLine":39,"endColumn":18},{"ruleId":"363","severity":1,"message":"396","line":64,"column":9,"nodeType":"365","messageId":"366","endLine":64,"endColumn":20},{"ruleId":"359","replacedBy":"399"},{"ruleId":"361","replacedBy":"400"},{"ruleId":"363","severity":1,"message":"401","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":21},{"ruleId":"363","severity":1,"message":"402","line":12,"column":10,"nodeType":"365","messageId":"366","endLine":12,"endColumn":16},{"ruleId":"403","severity":1,"message":"404","line":18,"column":3,"nodeType":"365","endLine":18,"endColumn":12,"suggestions":"405"},{"ruleId":"403","severity":1,"message":"406","line":18,"column":14,"nodeType":"407","endLine":34,"endColumn":4},{"ruleId":"363","severity":1,"message":"364","line":2,"column":10,"nodeType":"365","messageId":"366","endLine":2,"endColumn":23},{"ruleId":"363","severity":1,"message":"408","line":14,"column":10,"nodeType":"365","messageId":"366","endLine":14,"endColumn":16},{"ruleId":"363","severity":1,"message":"381","line":24,"column":7,"nodeType":"365","messageId":"366","endLine":24,"endColumn":13},{"ruleId":"363","severity":1,"message":"382","line":25,"column":7,"nodeType":"365","messageId":"366","endLine":25,"endColumn":13},{"ruleId":"363","severity":1,"message":"409","line":113,"column":12,"nodeType":"365","messageId":"366","endLine":113,"endColumn":16},{"ruleId":"363","severity":1,"message":"410","line":113,"column":18,"nodeType":"365","messageId":"366","endLine":113,"endColumn":25},{"ruleId":"403","severity":1,"message":"411","line":147,"column":11,"nodeType":"412","endLine":147,"endColumn":37,"suggestions":"413"},{"ruleId":"363","severity":1,"message":"414","line":174,"column":11,"nodeType":"365","messageId":"366","endLine":174,"endColumn":23},{"ruleId":"373","severity":1,"message":"415","line":222,"column":18,"nodeType":"375","messageId":"376","endLine":222,"endColumn":20},{"ruleId":"363","severity":1,"message":"416","line":223,"column":13,"nodeType":"365","messageId":"366","endLine":223,"endColumn":14},{"ruleId":"373","severity":1,"message":"415","line":278,"column":22,"nodeType":"375","messageId":"376","endLine":278,"endColumn":24},{"ruleId":"383","severity":1,"message":"384","line":327,"column":33,"nodeType":"385","endLine":327,"endColumn":55},{"ruleId":"363","severity":1,"message":"381","line":41,"column":9,"nodeType":"365","messageId":"366","endLine":41,"endColumn":15},{"ruleId":"363","severity":1,"message":"382","line":42,"column":9,"nodeType":"365","messageId":"366","endLine":42,"endColumn":15},{"ruleId":"363","severity":1,"message":"417","line":50,"column":27,"nodeType":"365","messageId":"366","endLine":50,"endColumn":43},{"ruleId":"403","severity":1,"message":"418","line":68,"column":11,"nodeType":"412","endLine":68,"endColumn":37,"suggestions":"419"},{"ruleId":"363","severity":1,"message":"394","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":17},{"ruleId":"363","severity":1,"message":"380","line":14,"column":22,"nodeType":"365","messageId":"366","endLine":14,"endColumn":32},{"ruleId":"363","severity":1,"message":"395","line":38,"column":7,"nodeType":"365","messageId":"366","endLine":38,"endColumn":18},{"ruleId":"363","severity":1,"message":"396","line":63,"column":9,"nodeType":"365","messageId":"366","endLine":63,"endColumn":20},{"ruleId":"363","severity":1,"message":"393","line":100,"column":15,"nodeType":"365","messageId":"366","endLine":100,"endColumn":21},{"ruleId":"363","severity":1,"message":"381","line":102,"column":15,"nodeType":"365","messageId":"366","endLine":102,"endColumn":21},{"ruleId":"383","severity":1,"message":"384","line":113,"column":29,"nodeType":"385","endLine":113,"endColumn":53},{"ruleId":"363","severity":1,"message":"393","line":22,"column":7,"nodeType":"365","messageId":"366","endLine":22,"endColumn":13},{"ruleId":"363","severity":1,"message":"381","line":24,"column":7,"nodeType":"365","messageId":"366","endLine":24,"endColumn":13},{"ruleId":"363","severity":1,"message":"382","line":25,"column":7,"nodeType":"365","messageId":"366","endLine":25,"endColumn":13},{"ruleId":"363","severity":1,"message":"409","line":113,"column":12,"nodeType":"365","messageId":"366","endLine":113,"endColumn":16},{"ruleId":"363","severity":1,"message":"410","line":113,"column":18,"nodeType":"365","messageId":"366","endLine":113,"endColumn":25},{"ruleId":"403","severity":1,"message":"411","line":148,"column":11,"nodeType":"412","endLine":148,"endColumn":37,"suggestions":"420"},{"ruleId":"363","severity":1,"message":"414","line":177,"column":11,"nodeType":"365","messageId":"366","endLine":177,"endColumn":23},{"ruleId":"373","severity":1,"message":"415","line":227,"column":18,"nodeType":"375","messageId":"376","endLine":227,"endColumn":20},{"ruleId":"363","severity":1,"message":"416","line":228,"column":13,"nodeType":"365","messageId":"366","endLine":228,"endColumn":14},{"ruleId":"373","severity":1,"message":"415","line":283,"column":22,"nodeType":"375","messageId":"376","endLine":283,"endColumn":24},{"ruleId":"383","severity":1,"message":"384","line":332,"column":33,"nodeType":"385","endLine":332,"endColumn":55},{"ruleId":"363","severity":1,"message":"394","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":17},{"ruleId":"363","severity":1,"message":"380","line":14,"column":22,"nodeType":"365","messageId":"366","endLine":14,"endColumn":32},{"ruleId":"363","severity":1,"message":"397","line":20,"column":7,"nodeType":"365","messageId":"366","endLine":20,"endColumn":18},{"ruleId":"363","severity":1,"message":"395","line":38,"column":7,"nodeType":"365","messageId":"366","endLine":38,"endColumn":18},{"ruleId":"363","severity":1,"message":"396","line":63,"column":9,"nodeType":"365","messageId":"366","endLine":63,"endColumn":20},{"ruleId":"363","severity":1,"message":"393","line":100,"column":15,"nodeType":"365","messageId":"366","endLine":100,"endColumn":21},{"ruleId":"363","severity":1,"message":"398","line":101,"column":15,"nodeType":"365","messageId":"366","endLine":101,"endColumn":21},{"ruleId":"363","severity":1,"message":"382","line":103,"column":15,"nodeType":"365","messageId":"366","endLine":103,"endColumn":21},{"ruleId":"383","severity":1,"message":"384","line":113,"column":29,"nodeType":"385","endLine":113,"endColumn":53},{"ruleId":"363","severity":1,"message":"394","line":3,"column":8,"nodeType":"365","messageId":"366","endLine":3,"endColumn":17},{"ruleId":"363","severity":1,"message":"421","line":4,"column":17,"nodeType":"365","messageId":"366","endLine":4,"endColumn":23},{"ruleId":"363","severity":1,"message":"380","line":13,"column":22,"nodeType":"365","messageId":"366","endLine":13,"endColumn":32},{"ruleId":"363","severity":1,"message":"397","line":32,"column":7,"nodeType":"365","messageId":"366","endLine":32,"endColumn":18},{"ruleId":"363","severity":1,"message":"395","line":50,"column":7,"nodeType":"365","messageId":"366","endLine":50,"endColumn":18},{"ruleId":"363","severity":1,"message":"396","line":75,"column":9,"nodeType":"365","messageId":"366","endLine":75,"endColumn":20},{"ruleId":"363","severity":1,"message":"409","line":14,"column":10,"nodeType":"365","messageId":"366","endLine":14,"endColumn":14},{"ruleId":"363","severity":1,"message":"410","line":14,"column":16,"nodeType":"365","messageId":"366","endLine":14,"endColumn":23},{"ruleId":"363","severity":1,"message":"422","line":17,"column":10,"nodeType":"365","messageId":"366","endLine":17,"endColumn":28},{"ruleId":"423","severity":1,"message":"424","line":30,"column":13,"nodeType":"365","messageId":"425","endLine":30,"endColumn":22},{"ruleId":"403","severity":1,"message":"426","line":36,"column":4,"nodeType":"412","endLine":36,"endColumn":19,"suggestions":"427"},{"ruleId":"428","severity":1,"message":"429","line":58,"column":31,"nodeType":"407","messageId":"430","endLine":58,"endColumn":33},{"ruleId":"363","severity":1,"message":"431","line":60,"column":13,"nodeType":"365","messageId":"366","endLine":60,"endColumn":18},{"ruleId":"363","severity":1,"message":"432","line":61,"column":13,"nodeType":"365","messageId":"366","endLine":61,"endColumn":22},{"ruleId":"359","replacedBy":"433"},{"ruleId":"361","replacedBy":"434"},{"ruleId":"363","severity":1,"message":"381","line":25,"column":7,"nodeType":"365","messageId":"366","endLine":25,"endColumn":13},{"ruleId":"363","severity":1,"message":"382","line":26,"column":7,"nodeType":"365","messageId":"366","endLine":26,"endColumn":13},{"ruleId":"363","severity":1,"message":"409","line":116,"column":12,"nodeType":"365","messageId":"366","endLine":116,"endColumn":16},{"ruleId":"363","severity":1,"message":"410","line":116,"column":18,"nodeType":"365","messageId":"366","endLine":116,"endColumn":25},{"ruleId":"403","severity":1,"message":"411","line":150,"column":11,"nodeType":"412","endLine":150,"endColumn":37,"suggestions":"435"},{"ruleId":"363","severity":1,"message":"414","line":177,"column":11,"nodeType":"365","messageId":"366","endLine":177,"endColumn":23},{"ruleId":"373","severity":1,"message":"415","line":225,"column":18,"nodeType":"375","messageId":"376","endLine":225,"endColumn":20},{"ruleId":"363","severity":1,"message":"416","line":226,"column":13,"nodeType":"365","messageId":"366","endLine":226,"endColumn":14},{"ruleId":"373","severity":1,"message":"415","line":259,"column":34,"nodeType":"375","messageId":"376","endLine":259,"endColumn":36},{"ruleId":"373","severity":1,"message":"374","line":259,"column":92,"nodeType":"375","messageId":"376","endLine":259,"endColumn":94},{"ruleId":"373","severity":1,"message":"415","line":294,"column":22,"nodeType":"375","messageId":"376","endLine":294,"endColumn":24},{"ruleId":"383","severity":1,"message":"384","line":343,"column":33,"nodeType":"385","endLine":343,"endColumn":55},{"ruleId":"363","severity":1,"message":"436","line":2,"column":37,"nodeType":"365","messageId":"366","endLine":2,"endColumn":43},"no-native-reassign",["437"],"no-negated-in-lhs",["438"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Actions' is defined but never used.","'key_short' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'dicePink' is defined but never used.","'diceYellow' is defined but never used.","'dicePurple' is defined but never used.","'makeStyles' is defined but never used.","'style3' is assigned a value but never used.","'style4' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'diceBlue' is defined but never used.","'wait' is defined but never used.","'timeout' is defined but never used.","'style1' is assigned a value but never used.","'LiveTable' is defined but never used.","'HigherSlide' is assigned a value but never used.","'PayoutSlide' is assigned a value but never used.","'ColoredLine' is assigned a value but never used.","'style2' is assigned a value but never used.",["437"],["438"],"'DialogActions' is defined but never used.","'ethers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFlag'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [flag] as a second argument to the useEffect Hook.",["439"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'wallet' is assigned a value but never used.","'flag' is assigned a value but never used.","'setFlag' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'wallet.account' and 'wallet.ethereum'. Either include them or remove the dependency array.","ArrayExpression",["440"],"'handlePayout' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'i' is assigned a value but never used.","'setTableViewFlag' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'wallet.account'. Either include it or remove the dependency array.",["441"],["442"],"'socket' is defined but never used.","'clickConnectButton' is assigned a value but never used.","no-redeclare","'key_short' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'wallet'. Either include it or remove the dependency array.",["443"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'temp2' is assigned a value but never used.","'temp2_add' is assigned a value but never used.",["437"],["438"],["444"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"447","fix":"451"},{"desc":"452","fix":"453"},{"desc":"447","fix":"454"},"Add dependencies array: [flag]",{"range":"455","text":"456"},"Update the dependencies array to be: [totalData, wallet.account, wallet.ethereum, wallet.status]",{"range":"457","text":"458"},"Update the dependencies array to be: [totalData, wallet.account, wallet.status]",{"range":"459","text":"460"},{"range":"461","text":"458"},"Update the dependencies array to be: [wallet, wallet.status]",{"range":"462","text":"463"},{"range":"464","text":"458"},[1182,1182],", [flag]",[5121,5147],"[totalData, wallet.account, wallet.ethereum, wallet.status]",[2740,2766],"[totalData, wallet.account, wallet.status]",[5160,5186],[1140,1155],"[wallet, wallet.status]",[5208,5234]]